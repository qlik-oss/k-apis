# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  test:
    docker:
      # specify the version
      - image: circleci/golang:1.13

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/qlik-oss/k-apis
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go test -v ./...
  release:
    docker:
      - image: circleci/golang:1.13
    working_directory: /go/src/github.com/qlik-oss/k-apis
    steps:
      - checkout
      - run:
          name: "Publish Release"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG}  /go/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/bin/${CIRCLE_TAG}/
workflows:
  version: 2
  commit:
    jobs:
      - build:
          filters:
            branches:
              only: master
  build_release:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - build_release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/




workflows:
  version: 2
  workflow1:
    jobs:
      - test:
          filters:
            branches:
              only: sanat_circleci
      - release:
          filters:
            branches:
              only: sanat_circleci
            tags:
              only: /v.*/
      